name: 'node_backend'
networks:
  default:
    name: guss-tapp
services:
  # Контейнеры с React App frontend
  static:
    container_name: static
    build:
      context: ./static/ci
    working_dir: /home/node/
    volumes:
      - ./static:/home/node:rw
    env_file:
      - static/.env
    ports:
      - 9999:9999
    depends_on:
      - db
      - app
  # Контейнеры с Node Server.js backend
  app:
    deploy:
      replicas: 3
      endpoint_mode: dnsrr
    build:
      context: ./app
    tty: true
    working_dir: /opt/server
    volumes:
      - ./app:/opt/server
      - ./app/static:/opt/static
      - ./app/node_modules:/opt/server/node_modules
    env_file:
      - .env
    expose:
      - '3000'
    ports:
      - 3000-3002:3000
    depends_on:
      - db

  # Контейнер с базой данных
  db:
    container_name: postgress
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    expose:
      - '5432'
    restart: always

  # Контейнер с nginx
  nginx:
    container_name: balancer
    depends_on:
      - app
      - db
      - pgadmin
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/ssl
      - ./app/static:/var/www/static
    restart: always

  # Контейнер с pgadmin
  pgadmin:
    container_name: pgadmin
    depends_on:
      - db
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${TYPEORM_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${TYPEORM_ADMIN_PASSWORD}
    expose:
      - '80'
    restart: always